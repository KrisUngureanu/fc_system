package com.cifs.or2.kernel;

import java.util.Arrays;

/**
 * com/cifs/or2/kernel/Activity.java .
 * Generated by the IDL-to-Java compiler (portable), version "3.2"
 * from ./src/com/cifs/or2/idl/kernel.idl
 * 27 Август 2009 г. 4:40:10 GMT
 */

public final class Activity implements java.io.Serializable {
    public long rootFlowId = (long) 0;
    public long subFlowId = (long) 0;
    public long[] superFlowIds = null;
    public long actorId = (long) 0;
    public long flowId = (long) 0;
    public long nodesId[][] = null;
    public long processDefId[] = null;
    public KrnObject objs[] = null;
    public long uiFlag = (long) 0;
    public KrnObject ui = null;
    public KrnObject firstUI = null;
    public String uiType = null;
    public long trId = (long) 0;
    public long param = (long) 0;
    public int error_msg = (int) 0;
    public KrnDate date = null;
    public KrnDate controlDate = null;
    public String userInit = null;
    public String userFrom = null;
    public String titles[] = null;
    public String msg = null;
    public byte article[] = null;
    public KrnObject articleLang = null;
    public String transitions[] = null;
    public KrnObject infObjs[] = null;
    public KrnObject infUi = null;
    public String uiTypeInf = null;
    public long color = (long) 0;
    public boolean autoIfc = false;
    public long timeActive = 0;
    public KrnObject openArh = null;
    public String infMsg = null;
    public String userBase_name = null;

    public Activity() {
    }

    public Activity(long flowId) {
    	this.flowId = flowId;
    }

    public Activity(long flowId, long rootFlowId,long[] superFlowIds, long subFlowId, long[][] nodesId, long[] processDefId, KrnObject[] objs, KrnObject ui,
            String uiType, long trId, long param, KrnDate date, KrnDate controlDate, String userInit, String userFrom,
            String[] titles, String msg, byte[] article, KrnObject articleLang, String[] transitions, KrnObject[] infObjs,
            KrnObject infUi, String uiTypeInf, boolean autoIfc, String infMsg, String userBase_name) {
        this.flowId = flowId;
        this.rootFlowId = rootFlowId;
        this.superFlowIds = superFlowIds;
        this.subFlowId = subFlowId;
        this.nodesId = nodesId;
        this.processDefId = processDefId;
        this.objs = objs;
        setUI(ui);
        this.uiType = uiType;
        this.trId = trId;
        this.param = param;
        this.date = date;
        this.controlDate = controlDate;
        this.userInit = userInit;
        this.userFrom = userFrom;
        this.titles = titles;
        this.msg = msg;
        this.article = article;
        this.articleLang = articleLang;
        this.transitions = transitions;
        this.infObjs = infObjs;
        this.infUi = infUi;
        this.uiTypeInf = uiTypeInf;
        this.autoIfc = autoIfc;
        this.infMsg = infMsg;
        this.userBase_name = userBase_name;
    }

    /**
     * 
     * @param ui the ui to set
     */
    public void setUI(KrnObject ui) {
        if (firstUI == null || this.ui.id == -1) {
            firstUI = ui;
        }
        this.ui = ui;
    }

    /**
     * Для использования внутри, переменная публична, а для вызова из орлэнга необходим этот метод
     * @return the flowId
     */
    public long getFlowId() {
        return flowId;
    }
    
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj instanceof Activity)
			return flowId == ((Activity)obj).flowId;
		return false;
	}
	
	@Override
	public String toString() {
		return "Activity [rootFlowId=" + rootFlowId + ", subFlowId=" + subFlowId + ", superFlowIds="
				+ Arrays.toString(superFlowIds) + ", actorId=" + actorId + ", flowId=" + flowId + ", nodesId="
				+ Arrays.toString(nodesId) + ", processDefId=" + Arrays.toString(processDefId) + ", objs="
				+ Arrays.toString(objs) + ", uiFlag=" + uiFlag + ", ui=" + ui + ", firstUI=" + firstUI + ", uiType="
				+ uiType + ", trId=" + trId + ", param=" + param + ", error_msg=" + error_msg + ", date=" + date
				+ ", controlDate=" + controlDate + ", userInit=" + userInit + ", userFrom=" + userFrom + ", titles="
				+ Arrays.toString(titles) + ", msg=" + msg + ", article=" + Arrays.toString(article) + ", articleLang="
				+ articleLang + ", transitions=" + Arrays.toString(transitions) + ", infObjs="
				+ Arrays.toString(infObjs) + ", infUi=" + infUi + ", uiTypeInf=" + uiTypeInf + ", color=" + color
				+ ", autoIfc=" + autoIfc + ", timeActive=" + timeActive + ", openArh=" + openArh + ", infMsg=" + infMsg + ", userBase_name=" + userBase_name
				+ "]";
	}
}




